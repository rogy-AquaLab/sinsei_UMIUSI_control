<?xml version="1.0" encoding="UTF-8"?>

<launch>
  <!-- Constants -->
  <let name="pkg_name" value="sinsei_umiusi_control" />

  <!-- Launch Arguments -->
  <arg name="thruster_mode" default="can" />

  <arg name="robot_description"
    default="$(command 'xacro $(find-pkg-share $(var pkg_name))/urdf/sinsei_umiusi_control.urdf.xacro thruster_mode:=\&apos;\&quot;$(var thruster_mode)\&quot;\&apos;')" />

  <arg
    name="robot_controllers_path"
    default="$(find-pkg-share $(var pkg_name))/config/controllers.yml" />

  <!-- Launch nodes -->
  <node
    pkg="controller_manager"
    exec="ros2_control_node" output="both">
    <param from="$(var robot_controllers_path)" />
  </node>

  <node pkg="controller_manager"
    exec="spawner"
    args="gate_controller --param-file $(var robot_controllers_path)" />

  <node pkg="controller_manager"
    exec="spawner"
    args="app_controller --param-file $(var robot_controllers_path)" />

  <node pkg="controller_manager"
    exec="spawner"
    args="thruster_controller1 --param-file $(var robot_controllers_path)" />

  <node pkg="controller_manager"
    exec="spawner"
    args="thruster_controller2 --param-file $(var robot_controllers_path)" />

  <node pkg="controller_manager"
    exec="spawner"
    args="thruster_controller3 --param-file $(var robot_controllers_path)" />

  <node pkg="controller_manager"
    exec="spawner"
    args="thruster_controller4 --param-file $(var robot_controllers_path)" />

  <node pkg="robot_state_publisher" exec="robot_state_publisher" output="both">
    <param name="robot_description" value="$(var robot_description)" />
  </node>

</launch>