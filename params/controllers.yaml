/**:
  controller_manager:
    ros__parameters:
      update_rate: 300 # Hz

  gate_controller:
    ros__parameters:
      type: sinsei_umiusi_control/controller/GateController
      update_rate: 50 # Hz

  attitude_controller:
    ros__parameters:
      type: sinsei_umiusi_control/controller/AttitudeController
      update_rate: 50 # Hz
      control_mode: "ff" # Control mode (ff: feedforward / fb: feedback)

  thruster_controller_lf: # Left Front Thruster
    ros__parameters:
      type: sinsei_umiusi_control/controller/ThrusterController
      update_rate: 50 # Hz
      id: 1 # ID of the thruster hardware component (`N` for `thrusterN` in the URDF)
      is_forward: true # Thruster direction (true for forward, false for reverse)
      max_duty: 0.5 # Maximum duty cycle (0.0 to 1.0)

  thruster_controller_lb: # Left Back Thruster
    ros__parameters:
      type: sinsei_umiusi_control/controller/ThrusterController
      update_rate: 50 # Hz
      id: 2 # ID of the thruster hardware component (`N` for `thrusterN` in the URDF)
      is_forward: true # Thruster direction (true for forward, false for reverse)
      max_duty: 0.5 # Maximum duty cycle (0.0 to 1.0)

  thruster_controller_rb: # Right Back Thruster
    ros__parameters:
      type: sinsei_umiusi_control/controller/ThrusterController
      update_rate: 50 # Hz
      id: 3 # ID of the thruster hardware component (`N` for `thrusterN` in the URDF)
      is_forward: true # Thruster direction (true for forward, false for reverse)
      max_duty: 0.5 # Maximum duty cycle (0.0 to 1.0)

  thruster_controller_rf: # Right Front Thruster
    ros__parameters:
      type: sinsei_umiusi_control/controller/ThrusterController
      update_rate: 50 # Hz
      id: 4 # ID of the thruster hardware component (`N` for `thrusterN` in the URDF)
      is_forward: true # Thruster direction (true for forward, false for reverse)
      max_duty: 0.5 # Maximum duty cycle (0.0 to 1.0)
